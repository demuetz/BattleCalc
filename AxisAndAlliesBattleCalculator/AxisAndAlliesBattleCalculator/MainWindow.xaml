<Window x:Class="AxisAndAlliesBattleCalculator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:converters="clr-namespace:AxisAndAlliesBattleCalculator.Converters"
        xmlns:unitConf="clr-namespace:BattleCalculator.Configuration;assembly=BattleCalculator"
        xmlns:dataVis="clr-namespace:System.Windows.Controls.DataVisualization;assembly=System.Windows.Controls.DataVisualization.Toolkit"
        xmlns:chartPrmtvs="clr-namespace:System.Windows.Controls.DataVisualization.Charting.Primitives;assembly=System.Windows.Controls.DataVisualization.Toolkit"
        xmlns:charts="clr-namespace:System.Windows.Controls.DataVisualization.Charting;assembly=System.Windows.Controls.DataVisualization.Toolkit"
        xmlns:extToolkit="clr-namespace:Microsoft.Windows.Controls;assembly=WPFToolkit.Extended"
        FontSize="13" 
        FontFamily="Verdana"
        Title="Axis and Allies 1940 Battle Calculator" Height="800" Width="1200"
        WindowStartupLocation="CenterOwner">
    <Window.Resources>
        <Style TargetType="Button" x:Key="BattleButton">
            <Setter Property="Margin" Value="4"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="60"/>
        </Style>
        <converters:BoolToVisibilityConverter x:Key="boolToVis" />
        <Style TargetType="{x:Type TextBlock}" x:Key="GridBlockStyle">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Visibility" 
                Value="{Binding Path=IsSelected,  RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}},
                    Converter={StaticResource boolToVis}, ConverterParameter=False}" />
        </Style>
        <Style TargetType="{x:Type extToolkit:IntegerUpDown}" x:Key="GridEditStyle">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="SelectAllOnGotFocus" Value="True" />
            <Setter Property="Height" Value="19" />
            <Setter Property="Visibility"
                Value="{Binding Path=IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}},
                    Converter={StaticResource boolToVis}, ConverterParameter=True}" />
        </Style>
        <Style x:Key="alternatingListViewItemStyle" TargetType="{x:Type ListViewItem}">
            <Style.Triggers>
                <!-- setting up triggers for alternate background colors -->
                <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                    <Setter Property="Background" Value="WhiteSmoke"></Setter>
                </Trigger>
                <Trigger Property="ItemsControl.AlternationIndex" Value="2">
                    <Setter Property="Background" Value="White"></Setter>
                </Trigger>
            </Style.Triggers>
            <!-- setting row height here -->
            <Setter Property="Height" Value="21" />
        </Style>
        <Style x:Key="chartWithMinimumMarginStyle" TargetType="charts:Chart">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="charts:Chart">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <dataVis:Title Content="{TemplateBinding Title}" Style="{TemplateBinding TitleStyle}" Margin="1"/>
                            <!-- Use a nested Grid to avoid possible clipping behavior resulting from ColumnSpan+Width=Auto -->
                            <Grid Grid.Row="1" Margin="5,0,5,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <chartPrmtvs:EdgePanel x:Name="ChartArea" Style="{TemplateBinding ChartAreaStyle}" Height="Auto">
                                    <Grid Canvas.ZIndex="-1" Style="{TemplateBinding PlotAreaStyle}" />
                                    <Border Canvas.ZIndex="10" BorderBrush="#FF919191" BorderThickness="1" />
                                </chartPrmtvs:EdgePanel>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Image x:Key="backgroundImage" Source="Images/Background.jpeg">
            <Image.OpacityMask>
                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5" >
                    <GradientStop Offset="0.0" Color="#33000000" />
                    <GradientStop Offset="1.0" Color="#11000000" />
                </LinearGradientBrush>
            </Image.OpacityMask>
        </Image>
        <VisualBrush x:Key="backgroundBrush"  Visual="{StaticResource backgroundImage}"/>
        <Style TargetType="Button" x:Key="UpDownButton">
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Height" Value="13"/>
            <Setter Property="Width" Value="13"/>
        </Style>
        <DataTemplate x:Key="unitTypeTemplate" DataType="{x:Type unitConf:UnitTypeElement}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="180"></ColumnDefinition>
                    <ColumnDefinition Width="18"></ColumnDefinition>
                    <ColumnDefinition Width="18"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBlock Name="dateBlock" Grid.Column="0" Grid.Row="1"
                    Text="{Binding Name}"></TextBlock>
                <Button Style="{StaticResource ResourceKey=UpDownButton}" Grid.Column="1" Grid.Row="1" 
                        Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, 
			                        Path= DataContext.MoveUnitUpInCasualtyOrderCommand}"
                        CommandParameter="{Binding}">
                    <Image Source="Images/Arrow-sans-up-32.png" Stretch="Fill"/>
                </Button>
                <Button Style="{StaticResource ResourceKey=UpDownButton}" Grid.Column="2" Grid.Row="1" 
                        Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, 
			                        Path= DataContext.MoveUnitDownInCasualtyOrderCommand}"
                        CommandParameter="{Binding}">
                    <Image Source="Images/Arrow-sans-down-32.png" Stretch="Fill"/>
                </Button>
            </Grid>
        </DataTemplate>
    </Window.Resources>
    <DockPanel Background="{StaticResource backgroundBrush}">
        <Menu DockPanel.Dock="Top" KeyboardNavigation.TabNavigation="Cycle" >
            <MenuItem Header="_File">
                <MenuItem Header="E_xit"  />
            </MenuItem>
            <MenuItem Header="_Edit" />
            <MenuItem Header="_Options" />
            <MenuItem Header="_Help" />
        </Menu>
        <ToolBarTray DockPanel.Dock="Top" Background="White" Height="20">
            <ToolBar Band="1" BandIndex="1">
                <Button ToolTip="Clear Units" Command="{Binding Path=ClearUnitsCommand}" Height="20">
                    <Image Source="Images\Clear.png"></Image>
                </Button>
                <Button ToolTip="Swap Units" Command="{Binding Path=SwapUnitsCommand}" Height="20">
                    <Image Source="Images\Swap.png"></Image>
                </Button>
            </ToolBar>
        </ToolBarTray>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="4*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem>
                <TextBlock>Ready</TextBlock>
            </StatusBarItem>
            <StatusBarItem Grid.Column="1">
                <ProgressBar Value="{Binding Path=SimulationProgress, Mode=OneWay}"  
                             Visibility="{Binding Path=IsProgressBarVisible, Converter={StaticResource boolToVis}, ConverterParameter=True }"
                             Width="80" 
                             Height="18"/>
            </StatusBarItem>
            <StatusBarItem Grid.Column="2">
                <TextBlock>Set</TextBlock>
            </StatusBarItem>
            <StatusBarItem Grid.Column="3">
                <TextBlock>Go!</TextBlock>
            </StatusBarItem>
        </StatusBar>
        <Grid Margin="4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="1" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Vertical">
                <StackPanel Grid.Column ="0" Orientation="Horizontal">
                    <ListView ItemsSource="{Binding UnitTypesInBattle}" FontSize="11" KeyboardNavigation.TabNavigation="Continue"
                          ItemContainerStyle="{StaticResource alternatingListViewItemStyle}" AlternationCount="2">
                        <ListView.View >
                            <GridView  >
                                <GridViewColumn  Header="Unit" DisplayMemberBinding="{Binding UnitName}" />
                                <GridViewColumn Width="70">
                                    <GridViewColumnHeader Tag="AttackerCount" Content="Attackers" />
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <TextBlock Text="{Binding Path=AttackerCount}" Style="{StaticResource GridBlockStyle}"/>
                                                <extToolkit:IntegerUpDown Value="{Binding Path=AttackerCount}" Style="{StaticResource GridEditStyle}" />
                                            </Grid>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Width="70">
                                    <GridViewColumnHeader Tag="DefenderCount" Content="Defenders" />
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <TextBlock Text="{Binding Path=DefenderCount}" Style="{StaticResource GridBlockStyle}"/>
                                                <extToolkit:IntegerUpDown Value="{Binding Path=DefenderCount}" Style="{StaticResource GridEditStyle}" />
                                            </Grid>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <StackPanel Orientation="Vertical" Margin="0,5" Width="250">
                        <GroupBox Header="Quick Fight">
                        <StackPanel Orientation="Horizontal">
                            <Button Style="{StaticResource BattleButton}" Command="{Binding Path=ResolveCombatCommand}">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Go!"/>
                                    <Image Source="Images\Explosion.png"></Image>
                                </StackPanel>
                            </Button>
                            <TextBlock Text="{Binding Path=QuickFightResultText}" Margin="10"/>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Unit Evaluation">
                        <StackPanel Orientation="Horizontal">
                            <Button Style="{StaticResource BattleButton}" Content="Update" Command="{Binding Path=EvaluateUnitsCommand}"/>
                            <TextBlock Text="{Binding Path=UnitsEvaluationText}" Margin="10"/>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Simulation">
                        <StackPanel Orientation="Horizontal">
                            <Button Style="{StaticResource BattleButton}" Content="Run" Command="{Binding Path=SimulateCombatCommand}"/>
                            <TextBlock Text="{Binding Path=SimulationResultText}" Margin="10"/>
                        </StackPanel>
                    </GroupBox>
                </StackPanel>
                </StackPanel>
                <GroupBox Header="Simulation Results" 
                          Visibility="{Binding Path=SimulationResultsViewModel.ResultsAvailable,Converter={StaticResource boolToVis}, ConverterParameter=True}">
                    <StackPanel Orientation="Horizontal">
                        <charts:Chart  Style="{StaticResource chartWithMinimumMarginStyle}" VerticalAlignment="Top" Height="350" Width="400" FontSize="10" >
                            <charts:Chart.Title >
                                <TextBlock Text="Attacker Losses" />
                            </charts:Chart.Title>
                            <charts:BarSeries  DependentValuePath="Value" 
                                               IndependentValuePath="Key" 
                                               ItemsSource="{Binding Path=SimulationResultsViewModel.AttackerLosses}" 
                                               IsSelectionEnabled="True" 
                                               SelectedItem="{Binding Path=SimulationResultsViewModel.SelectedAttackerOutcome, Mode=TwoWay}"/>
                        </charts:Chart>

                        <charts:Chart  Style="{StaticResource chartWithMinimumMarginStyle}" VerticalAlignment="Top" Height="350" Width="400" FontSize="10" >
                            <charts:Chart.Title >
                                <TextBlock Text="Defender Losses" />
                            </charts:Chart.Title>
                            <charts:BarSeries  DependentValuePath="Value" 
                                               IndependentValuePath="Key" 
                                               ItemsSource="{Binding Path=SimulationResultsViewModel.DefenderLosses}" 
                                               IsSelectionEnabled="True"/>
                        </charts:Chart>
                    </StackPanel>
                </GroupBox>
            </StackPanel>

            <!--Dividing Line-->
            <Canvas Grid.Column ="1" Background="Black"/>

            <!--Settings Column-->
            <StackPanel Grid.Column ="2" Orientation="Vertical" Margin="10,5">
                <GroupBox Header="Battle Settings" FontSize="11">
                    <StackPanel Orientation="Vertical" Margin="10" >
                        <StackPanel Orientation="Horizontal" ToolTip="Number of simluations to run">
                            <Label>Simulation Runs</Label>
                            <extToolkit:IntegerUpDown Value="{Binding Path=SimulationRuns}" SelectAllOnGotFocus="True" />
                        </StackPanel>
                        <Expander Header="Order of Loss for Attacker" Margin="0,15,0,0">
                            <ListView DataContext="{Binding Path=AttackerCasualtyOrderViewModel}" 
                                      ItemsSource="{Binding Path=CasualtyOrder}" 
                                      ItemTemplate="{StaticResource unitTypeTemplate}" 
                                      ItemContainerStyle="{StaticResource alternatingListViewItemStyle}" 
                                      AlternationCount="2"/>
                        </Expander>
                        <Expander Header="Order of Loss for Defender" Margin="0,15,0,0">
                            <ListView DataContext="{Binding Path=DefenderCasualtyOrderViewModel}" 
                                      ItemsSource="{Binding Path=CasualtyOrder}" 
                                      ItemTemplate="{StaticResource unitTypeTemplate}"
                                      ItemContainerStyle="{StaticResource alternatingListViewItemStyle}" 
                                      AlternationCount="2"/>
                        </Expander>
                    </StackPanel>
                </GroupBox>
            </StackPanel>
        </Grid>
    </DockPanel>
</Window>
